name: pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.1

      - name: Cache Go build
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-build
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v -ldflags "-X main.BuildID=${GITHUB_SHA}" ./...

      - name: Test
        run: go test -v ./...
        env:
          DATABASE_URL: postgres://postgres:password@localhost/postgres

      - name: Save executable
        uses: actions/upload-artifact@v2
        with:
          name: learn-github-actions
          path: learn-github-actions

  build-docker:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Log in to container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: BUILD_ID=${{ github.sha }}